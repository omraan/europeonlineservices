<?php
/** @var \Magento\Framework\View\Element\Template $block */
/**@var Eos\Base\ViewModel\Orders $viewModel*/
$viewModel = $block->getData('view_model');
$categories = $viewModel->getCategories();
$subcategories = $viewModel->getCategories();

$receiver_countries = $viewModel->getCountries('r');
$sender_countries = $viewModel->getCountries('s');

$address = $viewModel->getCustomerAddress();
$country = $viewModel->getCountry(null, $address['country_id']);
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$FormKey = $objectManager->get('Magento\Framework\Data\Form\FormKey');

$order_id = $block->getRequest()->getParam('order_id');
$edit = false;

if($order_id) {
    $edit = true;
    $order = $viewModel->getOrder($order_id);
};

?>

<script>

    require(["jquery", "Eos_Base/js/bootstrap.bundle.min", 'Eos_Base/js/packageDetails', 'Eos_Base/node_modules/bootstrap4-toggle/js/bootstrap4-toggle.min'], function ($, bootstrap,Modernizr) {

        $('input').attr('autocomplete','off');

        $('#element').on('hover' , function(){
            $(this).tooltip('toggle');
        });

        $('#toggle-two').bootstrapToggle({
            on: 'Enabled',
            off: 'Disabled'
        });

        window.addEventListener('load', function() {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                        $("html, body").animate({ scrollTop: 100 }, "slow");
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);

        $('.card-option').on('click', function() {
           if(!$(this).hasClass('card-option-active')) {

               const container = $(this).closest('.card-option-holder');
               const target = container.find('[class$=-id]').attr('class').split("-")[0];

               container.find('.card-option').removeClass('card-option-active');
               $(this).addClass('card-option-active');

               $('input[name="' + target + '"]').attr("value", $(this).find('.' + target + '-id').text());
           }
        });


    });
</script>
